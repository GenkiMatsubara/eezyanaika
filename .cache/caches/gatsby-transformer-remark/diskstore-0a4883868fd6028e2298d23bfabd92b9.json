{"expireTime":9007200823471487000,"key":"transformer-remark-markdown-html-5273d53bf322018654e97b7d01dd6f54-gatsby-remark-relative-imagesgatsby-remark-imagesgatsby-remark-copy-linked-files-","val":"<h2>この記事で学べる内容</h2>\n<ul>\n<li>nodeの使い方</li>\n<li>gulpの簡単な使い方</li>\n<li>imageminを使った画像圧縮</li>\n</ul>\n<h3>Githubはこちら</h3>\n<p><a href=\"https://github.com/RantaroTech/imagemin_gulp\">https://github.com/RantaroTech/imagemin_gulp</a></p>\n<h3>下記の1~11のコマンドを実行すると画像の圧縮がすぐに行えるようになります</h3>\n<p>自分で導入する際にgulpやimageminを調べたりして大変だったので非エンジニアでも使えるようにコピペだけで使えるようにまとめました。</p>\n<h3>順番にターミナルでコマンドを実行してください。</h3>\n<ol>\n<li>nodebrewをインストール </li>\n</ol>\n<pre><code>brew install nodebrew\n</code></pre>\n<ol start=\"2\">\n<li>yarnをインストール</li>\n</ol>\n<pre><code>brew install yarn\n</code></pre>\n<ol start=\"3\">\n<li>npm init (npmを使うための設定)</li>\n</ol>\n<pre><code>npm init\n</code></pre>\n<ol start=\"4\">\n<li>srcファイルを作成</li>\n</ol>\n<pre><code>mkdir src\n</code></pre>\n<ol start=\"5\">\n<li>distファイルを作成</li>\n</ol>\n<pre><code>mkdir dist\n</code></pre>\n<ol start=\"6\">\n<li>gulpfile.jsを作成</li>\n</ol>\n<pre><code>touch gulpfile.js\n</code></pre>\n<ol start=\"7\">\n<li>gulpをインストール</li>\n</ol>\n<pre><code>npm install gulp\n</code></pre>\n<ol start=\"8\">\n<li>imageminをインストール</li>\n</ol>\n<p><a href=\"https://www.npmjs.com/package/gulp-imagemin\">https://www.npmjs.com/package/gulp-imagemin</a></p>\n<ol start=\"9\">\n<li>imagemin-mozjpegをインストール</li>\n</ol>\n<p><a href=\"https://www.npmjs.com/package/imagemin-mozjpeg\">https://www.npmjs.com/package/imagemin-mozjpeg</a></p>\n<ol start=\"10\">\n<li>imagemin-pngquantをインストール</li>\n</ol>\n<p><a href=\"https://www.npmjs.com/package/imagemin-pngquant\">https://www.npmjs.com/package/imagemin-pngquant</a></p>\n<p>ここまで実行するとこのようなディレクトリ構造になっています。</p>\n<pre><code>├ dist　　　　　　　　　　　　　　　　　　               ・圧縮した画像が置かれる　(ディストリビューションの略)\n├ gulpfile.js                        ・gulｐの設定を行う　　　　　　　　　　\n├ node_modules               ・nodeの設定が補完される\n├ package-lock.json          ・nodeのバージョンを表記する\n├ package.json                   ・nodeの設定を記述する\n└ src                                    ・圧縮前の画像を保管する　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　\n</code></pre>\n<ol start=\"11\">\n<li>gulpfile.jsに下記をコピぺする</li>\n</ol>\n<pre><code class=\"language-gulpfile.js\">const gulp = require('gulp');\nconst distDir = 'dist';\nconst srcDir = 'src';\nconst imagemin = require('gulp-imagemin');\nconst pngquant = require('imagemin-pngquant');\nconst mozjpeg = require('imagemin-mozjpeg');\n\ngulp.task('img', () => {\n  return gulp.src(srcDir + '/*.{png,jpg,gif}')\n    .pipe(imagemin([\n      pngquant('65-80'),// 配列を渡すと文字列を渡すようにエラーが出たので画質のみを設定\n      mozjpeg({\n        quality: 85,\n        progressive: true\n      }),\n      imagemin.svgo(),\n      imagemin.optipng(),\n      imagemin.gifsicle()\n    ]))\n    .pipe(gulp.dest(distDir));\n});\n</code></pre>\n<h3>gulpを実際に実行する</h3>\n<pre><code>gulp img\n</code></pre>\n<pre><code>Using gulpfile ~/test_gulp/gulpfile.js\nStarting 'img'...\ngulp-imagemin: Minified 1 image (saved 25 kB - 67%)\nFinished 'img' after 527 ms\n</code></pre>\n<p>６７％圧縮できました！</p>\n<h2>　まとめ</h2>\n<p>画像容量を6割近く削減することができました。\nデザイナーではない素人目ですが画像の劣化などあまり気になりませんでした。</p>\n<p>・基本的に <code>gulpfile.js</code> を変更すれば設定を変更可能です。</p>\n<p>・細かい圧縮の設定などを変更したい場合はリンクの公式のオプションを参考にしてみてください。</p>\n<p>ここまでお読みいただきありがとうございました。</p>"}